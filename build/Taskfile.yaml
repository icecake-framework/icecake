# https://taskfile.dev
# run task from the root with "task {mytask} -t /build/Taskfile.yaml"

version: '3'

interval: '1000ms'

tasks:

  build_website:
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      - rm -rf ./website
      - mkdir -p ./website
      - cp -R ./web/static/** ./website/
      - GOARCH=wasm GOOS=js go build -o ./website/static/spa.wasm ./web/wasm/
      - go build -o ./website/icecake ./cmd/icecake/icecake.go

  unit_test:
    dir: '{{.USER_WORKING_DIR}}'
    cmds:
      # - go test -cover -race ./pkg/...
      # - GOARCH=wasm GOOS=js go test -cover ./web/...
      - GOARCH=wasm GOOS=js go test ./web/wasm/wasm_test.go

  # task -t ./build/Taskfile.yaml dev_wasm
  dev_wasm:
    dir: '{{.USER_WORKING_DIR}}'
    sources: 
      - "web/wasm/main.go"
    cmds: 
      - GOARCH=wasm GOOS=js go build -o ./tmp/website/spa.wasm ./web/wasm/

  # task -t ./build/Taskfile.yaml doc_wasm
  doc_wasm:
    dir: '{{.USER_WORKING_DIR}}'
    cmds: 
      - GOARCH=wasm GOOS=js go build -o ./docs/index.wasm ./web/docs/pages/wasm/index/
      - GOARCH=wasm GOOS=js go build -o ./docs/docoverview.wasm ./web/docs/pages/wasm/docoverview/
      - GOARCH=wasm GOOS=js go build -o ./docs/docbutton.wasm ./web/docs/pages/wasm/docbutton/
      - GOARCH=wasm GOOS=js go build -o ./docs/doccard.wasm ./web/docs/pages/wasm/doccard/
      - GOARCH=wasm GOOS=js go build -o ./docs/docmenu.wasm ./web/docs/pages/wasm/docmenu/
      - GOARCH=wasm GOOS=js go build -o ./docs/docmessage.wasm ./web/docs/pages/wasm/docmessage/
      - GOARCH=wasm GOOS=js go build -o ./docs/docnavbar.wasm ./web/docs/pages/wasm/docnavbar/
      - GOARCH=wasm GOOS=js go build -o ./docs/docnotify.wasm ./web/docs/pages/wasm/docnotify/
      - GOARCH=wasm GOOS=js go build -o ./docs/docimage.wasm ./web/docs/pages/wasm/docimage/
      - GOARCH=wasm GOOS=js go build -o ./docs/docinput.wasm ./web/docs/pages/wasm/docinput/
      - GOARCH=wasm GOOS=js go build -o ./docs/dochero.wasm ./web/docs/pages/wasm/dochero/
      - GOARCH=wasm GOOS=js go build -o ./docs/docdelete.wasm ./web/docs/pages/wasm/docdelete/
      - GOARCH=wasm GOOS=js go build -o ./docs/docicon.wasm ./web/docs/pages/wasm/docicon/

  # task -t ./build/Taskfile.yaml dev_framework
  dev_framework:
    dir: '{{.USER_WORKING_DIR}}'
    sources: 
      - "pkg/framework/**/*"
      - "pkg/webclientsdk/**/*"
    cmds: 
      - GOARCH=wasm GOOS=js go build -o ./tmp/website/spa.wasm ./web/wasm/

  # task -t ./build/Taskfile.yaml dev_components
  dev_components:
    dir: '{{.USER_WORKING_DIR}}'
    sources: 
      - "web/components/**/*"
    cmds: 
      - GOARCH=wasm GOOS=js go build -o ./tmp/website/spa.wasm ./web/wasm/

  # task -t ./build/Taskfile.yaml dev_static
  dev_static: 
    dir: '{{.USER_WORKING_DIR}}'
    sources: 
      - "./web/static/**/*"
      - "./examples/**/static/**/*"
    cmds: 
      - mkdir -p ./tmp/website
      - cp -R ./web/static/** ./tmp/website/
      - find ./examples -type f | xargs -i cp {} ./tmp/website/

  # task -t ./build/Taskfile.yaml test_wasm 
  test_wasm:
    dir: '{{.USER_WORKING_DIR}}/internal/testswasm'
    cmds:
      - GOARCH=wasm GOOS=js go build -o ./tests.wasm 

  # EXAMPLE=example3 task -t ./build/Taskfile.yaml build_example
  build_example:
    dir: '{{.USER_WORKING_DIR}}/examples'
    sources: 
      - "./{{.EXAMPLE}}/wasm/*.*"
      - "./../pkg/**/*"
      - "./../assets/*"
    cmds:
      - cp -R ./../assets/icecake.js ./website
      - GOARCH=wasm GOOS=js go build -o ./website/{{.EXAMPLE}}.wasm ./{{.EXAMPLE}}/wasm/

  # task -t ./build/Taskfile.yaml dev_front --watch 
  dev_front:
    dir: '{{.USER_WORKING_DIR}}'
    deps: 
      - task: dev_static
      - task: dev_components
      - task: dev_framework
      - task: dev_wasm

  # task -t ./build/Taskfile.yaml dev_back
  dev_back:
    dir: '{{.USER_WORKING_DIR}}'
    ignore_error: true
    cmds: 
      - go run ./cmd/icecake/icecake.go --env=./configs/dev
